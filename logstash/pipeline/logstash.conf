input {
  file {
    path => [ "/mnt/data/messages" ]
    tags => [ "syslog-pfsense" ]
    type => "syslog-pfsense"
  }
}

filter {
  if "syslog-pfsense" in [tags] {
    grok {
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp}: %{WORD:syslog_severity} %{SYSLOGHOST:syslog_hostname} %{SYSLOGPROG:syslog_program}:%{SPACE}%{GREEDYDATA:syslog_message}" ]
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
    mutate {
      replace => [ "host", "%{syslog_hostname}" ]
    }
    if [program] == "filterlog" {
      grok {
        patterns_dir => "./patterns"
        match => [ "syslog_message", "%{LOG_DATA}%{IP_SPECIFIC_DATA}%{IP_DATA}%{PROTOCOL_DATA}" ]
      }
      mutate {
        lowercase => [ 'proto' ]
      }
      geoip {
        add_tag => [ "geoip" ]
        source => "src_ip"
      }
    }
  }
  if [program] == "dhcpd" {
    grok {
      match => [ "syslog_message", "%{DHCPD}" ]
    }
  }
}

output { 
  if "_grokparsefailure" in [tags] {
    file { 
      path => "/var/log/logstash/grokparsefailure-%{+YYYY-MM-dd}" 
    }
  } else {
      elasticsearch {
        hosts => [ "elasticsearch" ]
        index => "logstash-%{+YYYY.MM.dd}"
      }
    }
  }
}
