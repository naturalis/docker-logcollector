version: '3.4'

x-logging:
  &default-logging
  options:
    max-size: '10m'
    max-file: '5'
  driver: json-file

services:
  traefik:
    image: traefik:2.0.1
    container_name: traefik
    restart: unless-stopped
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_HOSTED_ZONE_ID=${AWS_HOSTED_ZONE_ID}
    ports:
      - 80:80
      - 443:443
      - 8081:8080
    networks:
      - default
      - web
    logging: *default-logging
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik:/etc/traefik

  traefik-forward-auth:
    image: thomseddon/traefik-forward-auth:2.0.1
    restart: unless-stopped
    env_file: ./.env
    ports:
            - 127.0.0.1:4181:4181
    logging: *default-logging
    command:
      - '--url-path=/oauth2/callback'
    networks:
      - web

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:${ELK_VERSION}
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      # so support single node development
      discovery.type: single-node
      cluster.routing.allocation.disk.threshold_enabled: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - web
      - default
    labels:
      - traefik.enable=${TRAEFIK_ENABLE:-true}
      - traefik.http.routers.elasticsearch.entrypoints=https
      - traefik.http.routers.elasticsearch.tls.certresolver=${TRAEFIK_CERT_RESOLVER:-route53}
      - traefik.http.routers.elasticsearch.tls=true
      - traefik.http.routers.elasticsearch.rule=${ELASTICSEARCH_URL_CONFIG:-Host(`something-es.analytics.naturalis.nl`)}
      - traefik.http.routers.elasticsearch.middlewares=secureHeaders@file,googleAuth@file
    logging: *default-logging

  curator:
    image: bobrik/curator:5.7.6
    environment:
      UNIT_COUNT: ${CURATOR_UNIT_COUNT}
      UNIT: ${CURATOR_UNIT}
      ES_HOST: ${CURATOR_ES_HOST}
    volumes:
      - ./curator/action-file.yml:/action-file.yml
      - ./curator/config.yml:/config.yml
    depends_on:
      - elasticsearch

  logstash:
    image: naturalis/logstash:${ELK_VERSION}
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/${LOGSTASH_PATH_CONFIG}:/usr/share/logstash/pipeline
      - ${LOGSTASH_PATH_LOGS}:/mnt/log:rw
    ports:
      - "5000"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - default
    depends_on:
      - elasticsearch
    logging: *default-logging

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:${ELK_VERSION}
    expose:
      - "5601"
    ports:
      - "5601:5601"
    networks:
      - web
      - default
    labels:
      - traefik.enable=${TRAEFIK_ENABLE:-true}
      - traefik.http.routers.kibana.entrypoints=https
      - traefik.http.routers.kibana.tls.certresolver=${TRAEFIK_CERT_RESOLVER:-route53}
      - traefik.http.routers.kibana.tls=true
      - traefik.http.routers.kibana.rule=${KIBANA_URL_CONFIG:-Host(`something-kibana.analytics.naturalis.nl`)}
      - traefik.http.routers.kibana.middlewares=secureHeaders@file,googleAuth@file
    logging: *default-logging

  grafana:
    image: grafana/grafana:6.2.5
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASS:-secret}
    expose:
      - "3000"
    ports:
      - "3000:3000"
    networks:
      - web
      - default
    labels:
      - traefik.enable=${TRAEFIK_ENABLE:-true}
      - traefik.http.routers.grafana.entrypoints=https
      - traefik.http.routers.grafana.tls.certresolver=${TRAEFIK_CERT_RESOLVER:-route53}
      - traefik.http.routers.grafana.tls=true
      - traefik.http.routers.grafana.rule=${GRAFANA_URL_CONFIG:-Host(`something-grafana.analytics.naturalis.nl`)}
    logging: *default-logging

  rsyslog:
    image: naturalis/rsyslog:0.0.1
    network_mode: "host"
    ports:
      - 514:514/udp
      - 514:514
    volumes:
      - ./rsyslog/${RSYSLOG_CONF}:/etc/rsyslogd.conf
      - rsyslog_data:/var/log
    logging: *default-logging

  logrotate:
    image: blacklabelops/logrotate:1.3
    volumes:
      - rsyslog_data:/var/log
    environment:
      - LOGS_DIRECTORIES=/var/log
      - LOGROTATE_INTERVAL=hourly
      - LOGROTATE_COPIES=1
      - LOGROTATE_SIZE=5G
      - LOGROTATE_CRONSCHEDULE=*/10 * * * *
      - LOGROTATE_PARAMETERS=v
      - LOGROTATE_LOGFILE=/var/log/logrotatecron.log
    logging: *default-logging

  filebeat:
    image: docker.elastic.co/beats/filebeat-oss:${ELK_VERSION}
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./filebeat/modules.d:/usr/share/filebeat/modules.d
      - ./filebeat/module:/usr/share/filebeat/module
      - ./filebeat/template:/template
      - ${BASE_PATH:-/data}/filebeat:/log
    command: -e -strict.perms=false
    networks:
      - default
    logging: *default-logging

networks:
  web:
    external: true

volumes:
  elasticsearch_data:
  grafana_data:
  rsyslog_data:
